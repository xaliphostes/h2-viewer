(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=e(n);fetch(n.href,o)}})();class ${constructor(t,e={}){this.K=null,this.M=null,this.data=t,this.model=e.model||"exponential",this.nugget=e.nugget||0,this.sill=e.sill??null,this.range=e.range??null,(this.sill===null||this.range===null)&&this.fitVariogram(),this.prepareMatrices()}interpolate(t,e){const i=this.data.length;if(!this.M)throw new Error("Matrix not initialized");const n=Array(i).fill(0);for(let r=0;r<i;r++){const s=this.distance({lon:t,lat:e},this.data[r]);n[r]=this.sill-this.variogram(s)}const o=Array(i).fill(0);for(let r=0;r<i;r++)for(let s=0;s<i;s++)o[r]+=this.M[r][s]*n[s];let a=0;for(let r=0;r<i;r++)a+=o[r]*this.data[r].h2;return a}variance(t,e){const i=this.data.length;if(!this.M)throw new Error("Matrix not initialized");const n=Array(i).fill(0);for(let r=0;r<i;r++){const s=this.distance({lon:t,lat:e},this.data[r]);n[r]=this.sill-this.variogram(s)}const o=Array(i).fill(0);for(let r=0;r<i;r++)for(let s=0;s<i;s++)o[r]+=this.M[r][s]*n[s];let a=this.sill;for(let r=0;r<i;r++)a-=o[r]*n[r];return Math.max(0,a)}getParameters(){return{model:this.model,nugget:this.nugget,sill:this.sill,range:this.range}}distance(t,e){return Math.sqrt(Math.pow(t.lon-e.lon,2)+Math.pow(t.lat-e.lat,2))}variogram(t){if(t===0)return 0;const{nugget:e,sill:i,range:n}=this,o=i-e;switch(this.model){case"exponential":return e+o*(1-Math.exp(-3*t/n));case"gaussian":return e+o*(1-Math.exp(-3*Math.pow(t/n,2)));case"spherical":return t>=n?i:e+o*(1.5*t/n-.5*Math.pow(t/n,3));default:return e+o*(1-Math.exp(-3*t/n))}}fitVariogram(){const t=this.data.length,e=[];for(let r=0;r<t;r++)for(let s=r+1;s<t;s++){const g=this.distance(this.data[r],this.data[s]);.5*Math.pow(this.data[r].h2-this.data[s].h2,2),e.push(g)}const i=this.data.map(r=>r.h2),n=i.reduce((r,s)=>r+s,0)/i.length,o=i.reduce((r,s)=>r+Math.pow(s-n,2),0)/i.length;this.sill=o*1.2;const a=Math.max(...e);this.range=a*.3,this.nugget===0&&(this.nugget=this.sill*.05)}prepareMatrices(){const t=this.data.length;this.K=Array(t).fill(0).map(()=>Array(t).fill(0));for(let e=0;e<t;e++)for(let i=0;i<t;i++){const n=this.distance(this.data[e],this.data[i]);this.K[e][i]=this.sill-this.variogram(n)}this.M=this.invertMatrix(this.K)}invertMatrix(t){const e=t.length,i=Array(e).fill(0).map((o,a)=>Array(e).fill(0).map((r,s)=>a===s?1:0)),n=t.map((o,a)=>[...o,...i[a]]);for(let o=0;o<e;o++){let a=o;for(let s=o+1;s<e;s++)Math.abs(n[s][o])>Math.abs(n[a][o])&&(a=s);[n[o],n[a]]=[n[a],n[o]];const r=n[o][o];if(Math.abs(r)<1e-10){console.warn("Matrice singulière détectée");continue}for(let s=0;s<2*e;s++)n[o][s]/=r;for(let s=0;s<e;s++)if(s!==o){const g=n[s][o];for(let l=0;l<2*e;l++)n[s][l]-=g*n[o][l]}}return n.map(o=>o.slice(e))}}function P(c,t,e,i=2,n=1e-4){let o=0,a=0;for(const r of e){const s=Math.sqrt(Math.pow(r.lon-c,2)+Math.pow(r.lat-t,2));if(s<n)return r.h2;const g=1/Math.pow(s,i);o+=g,a+=g*r.h2}return a/o}class j{constructor(t,e,i="rainbow"){this.minValue=t,this.maxValue=e,typeof i=="function"?this.colorFunction=i:Array.isArray(i)?this.colorFunction=this.createGradientFunction(i):this.colorFunction=this.getPredefinedScheme(i)}getColor(t){const e=this.normalize(t);return this.colorFunction(e)}getColorString(t){const{r:e,g:i,b:n}=this.getColor(t);return`rgb(${Math.round(e)}, ${Math.round(i)}, ${Math.round(n)})`}getColorHex(t){const{r:e,g:i,b:n}=this.getColor(t),o=a=>Math.round(a).toString(16).padStart(2,"0");return`#${o(e)}${o(i)}${o(n)}`}normalize(t){return this.maxValue===this.minValue?.5:Math.max(0,Math.min(1,(t-this.minValue)/(this.maxValue-this.minValue)))}lerp(t,e,i){return t+(e-t)*i}lerpColor(t,e,i){return{r:this.lerp(t.r,e.r,i),g:this.lerp(t.g,e.g,i),b:this.lerp(t.b,e.b,i)}}createGradientFunction(t){const e=[...t].sort((i,n)=>i.position-n.position);return i=>{if(i<=e[0].position)return e[0].color;if(i>=e[e.length-1].position)return e[e.length-1].color;for(let n=0;n<e.length-1;n++){const o=e[n],a=e[n+1];if(i>=o.position&&i<=a.position){const r=(i-o.position)/(a.position-o.position);return this.lerpColor(o.color,a.color,r)}}return e[0].color}}getPredefinedScheme(t){switch(t){case"rainbow":return this.rainbowScheme();case"viridis":return this.viridisScheme();case"plasma":return this.plasmaScheme();case"turbo":return this.turboScheme();case"thermal":return this.thermalScheme();case"grayscale":return this.grayscaleScheme();case"logarithmic":return this.logarithmicScheme();case"twostep":return this.twostepScheme();default:return this.rainbowScheme()}}logarithmicScheme(){return t=>{const e=this.minValue+t*(this.maxValue-this.minValue),i=Math.log10(this.minValue+.001),n=Math.log10(this.maxValue+.001),a=(Math.log10(e+.001)-i)/(n-i),r=[{position:0,color:{r:68,g:1,b:84}},{position:.25,color:{r:59,g:82,b:139}},{position:.5,color:{r:33,g:145,b:140}},{position:.75,color:{r:94,g:201,b:98}},{position:1,color:{r:253,g:231,b:37}}];return this.createGradientFunction(r)(a)}}twostepScheme(){return t=>{const e=this.minValue+t*(this.maxValue-this.minValue);let i;e<=1?i=e/1*.7:i=.7+(e-1)/(this.maxValue-1)*.3;const n=[{position:0,color:{r:13,g:8,b:135}},{position:.25,color:{r:126,g:3,b:168}},{position:.5,color:{r:204,g:71,b:120}},{position:.75,color:{r:248,g:149,b:64}},{position:1,color:{r:240,g:249,b:33}}];return this.createGradientFunction(n)(i)}}rainbowScheme(){return t=>{let e,i,n;if(t<.25){const o=t/.25;e=0+68*o,i=0+119*o,n=255-74*o}else if(t<.5){const o=(t-.25)/.25;e=68+92*o,i=119+91*o,n=181-111*o}else if(t<.75){const o=(t-.5)/.25;e=160+91*o,i=210+35*o,n=70-70*o}else{const o=(t-.75)/.25;e=251+4*o,i=245-58*o,n=0}return{r:e,g:i,b:n}}}viridisScheme(){const t=[{position:0,color:{r:68,g:1,b:84}},{position:.25,color:{r:59,g:82,b:139}},{position:.5,color:{r:33,g:145,b:140}},{position:.75,color:{r:94,g:201,b:98}},{position:1,color:{r:253,g:231,b:37}}];return this.createGradientFunction(t)}plasmaScheme(){const t=[{position:0,color:{r:13,g:8,b:135}},{position:.25,color:{r:126,g:3,b:168}},{position:.5,color:{r:204,g:71,b:120}},{position:.75,color:{r:248,g:149,b:64}},{position:1,color:{r:240,g:249,b:33}}];return this.createGradientFunction(t)}turboScheme(){const t=[{position:0,color:{r:48,g:18,b:59}},{position:.2,color:{r:33,g:102,b:172}},{position:.4,color:{r:53,g:183,b:121}},{position:.6,color:{r:159,g:231,b:61}},{position:.8,color:{r:252,g:178,b:37}},{position:1,color:{r:122,g:4,b:3}}];return this.createGradientFunction(t)}thermalScheme(){const t=[{position:0,color:{r:0,g:0,b:0}},{position:.25,color:{r:128,g:0,b:0}},{position:.5,color:{r:255,g:69,b:0}},{position:.75,color:{r:255,g:215,b:0}},{position:1,color:{r:255,g:255,b:255}}];return this.createGradientFunction(t)}grayscaleScheme(){return t=>{const e=t*255;return{r:e,g:e,b:e}}}updateRange(t,e){this.minValue=t,this.maxValue=e}getRange(){return{min:this.minValue,max:this.maxValue}}}let h=[],w=[];async function k(){try{h=(await(await fetch("/h2_frantz.csv")).text()).trim().split(`
`).slice(1).map(l=>{const[d,f,M]=l.split(";").map(b=>parseFloat(b.trim()));return{lat:d,lon:f,h2:M}}).filter(l=>!isNaN(l.lat)&&!isNaN(l.lon)&&!isNaN(l.h2));const n=h.map(l=>l.lat),o=h.map(l=>l.lon);w=[Math.min(...o),Math.min(...n),Math.max(...o),Math.max(...n)];const a=h.map(l=>l.h2),r=Math.min(...a),s=Math.max(...a),g=a.reduce((l,d)=>l+d,0)/a.length;document.getElementById("statPoints").textContent=h.length,document.getElementById("statMin").textContent=r.toFixed(2),document.getElementById("statMax").textContent=s.toFixed(2),document.getElementById("statMean").textContent=g.toFixed(2),console.log("Data loaded:",h.length,"points"),console.log("Bounds:",w)}catch(c){console.error("Error loading data:",c),alert("Error loading data. Make sure h2_frantz.csv is in the public folder.")}}function I(){if(h.length===0){alert("No data loaded!");return}const c=document.getElementById("heatmapCanvas"),t=c.getContext("2d"),e=c.width,i=c.height,n=document.getElementById("colorScheme").value,o=document.getElementById("algorithm").value,a=document.getElementById("variogramModel").value,r=parseFloat(document.getElementById("power").value),s=parseFloat(document.getElementById("minDistance").value);["colorScheme","algorithm","variogramModel","power","minDistance"].forEach(u=>{document.getElementById(u).addEventListener("change",()=>{h.length>0&&K()})});const l=h.map(u=>u.h2),d=Math.min(...l),f=Math.max(...l),M=new j(d,f,n);document.getElementById("legendMin").textContent=d.toFixed(2),document.getElementById("legendMax").textContent=f.toFixed(2),D(M);const[b,B,C,v]=w,L=C-b,G=v-B;let x=null;o==="kriging"&&(console.log("Initializing Kriging with model:",a),x=new $(h,{model:a}),console.log("Kriging parameters:",x.getParameters()));const m=100,S=e/m,V=i/m;console.log("Generating heatmap...");const N=performance.now();for(let u=0;u<m;u++)for(let p=0;p<m;p++){const F=b+L*(u+.5)/m,E=v-G*(p+.5)/m;let y;o==="kriging"&&x?y=x.interpolate(F,E):y=P(F,E,h,r,s);const H=M.getColorString(y);t.fillStyle=H,t.fillRect(u*S,p*V,S,V)}const A=performance.now();console.log(`Heatmap generated in ${(A-N).toFixed(0)}ms`)}function D(c){const t=document.getElementById("legendGradient"),e=100;let i="linear-gradient(to right";for(let n=0;n<=e;n++){const o=n/e,a=c.getColor(c.minValue+o*(c.maxValue-c.minValue));i+=`, rgb(${Math.round(a.r)}, ${Math.round(a.g)}, ${Math.round(a.b)})`}i+=")",t.style.background=i}document.getElementById("algorithm").addEventListener("change",c=>{const t=c.target.value;document.getElementById("krigingOptions").style.display=t==="kriging"?"block":"none",document.getElementById("idwOptions").style.display=t==="idw"?"block":"none"});function K(){setTimeout(()=>{I()},10)}k().then(()=>{I()});
